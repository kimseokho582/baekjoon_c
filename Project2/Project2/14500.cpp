#include <iostream>
#include <algorithm>
using namespace std;

int dir[19][4][2] = {
	{{0,0},{1,0},{2,0},{3,0}},
	{{0,0},{0,1},{0,2},{0,3}},
	{{0,0},{1,0},{0,1},{1,1}},
	{{0,0},{1,0},{2,0},{2,1}},
	{{0,0},{1,0},{2,0},{2,-1}},
	{{0,0},{1,0},{2,0},{0,1}},
	{{0,0},{0,1},{1,1},{2,1}},
	{{0,0},{0,1},{0,2},{1,1}},
	{{0,0},{1,0},{1,-1},{1,1}},
	{{0,0},{1,0},{2,0},{1,1}},
	{{0,0},{1,0},{2,0},{1,-1}},
	{{0,0},{1,0},{1,1},{2,1}},
	{{0,0},{1,0},{1,-1},{2,-1}},
	{{0,0},{0,1},{1,0},{1,-1}},
	{{0,0},{0,1},{1,1},{1,2}},
	{{0,0},{1,0},{1,1},{1,2}},
	{{0,0},{1,0},{1,-1},{1,-2}},
	{{0,0},{1,0},{0,1},{0,2}},
	{{0,0},{0,1},{0,2},{1,2}},
};

int table[500][500];

int main() {
	int N, M; cin >> N >> M;
	for (int i = 0; i < N; i++) {
		for (int j = 0; j < M; j++) {
			cin >> table[i][j];
		}
	}

	int ans = 0;
	for (int i = 0; i < N; i++) {
		for (int j = 0; j < M; j++) {
			for (int p = 0; p < 19; p++) {
				int large = 0, flag = 0;
				for (int q = 0; q < 4; q++) {
					int ni = i + dir[p][q][0], nj = j + dir[p][q][1];
					if (0 <= ni && ni < N && 0 <= nj && nj < M) {
						large += table[ni][nj];
					}
					else {
						flag = 1;
						break;
					}
				}
				if (!flag) {
					ans = max(large, ans);
				}
			}
		}

	}cout << ans;

}